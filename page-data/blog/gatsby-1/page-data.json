{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/gatsby-1","result":{"data":{"markdownRemark":{"html":"<br>\n<br>\n<blockquote>\n<p><strong>Gatsby</strong>.   React를 알면 쉽게 사용할 수 있는 정적사이트 생성기.</p>\n</blockquote>\n<br>\n<br>\n<h3>🗡 특징</h3>\n<p><strong>React + GrapQL기반</strong></p>\n<ul>\n<li>Jekyll은 Ruby 기반이기에 React에 친숙하면 Gatsby에 눈길이 갈거다.</li>\n</ul>\n<br>\n<p><strong>정적 사이트</strong></p>\n<ul>\n<li>빈 HTML 페이지 안에 마크업을 추가해주는 SPA와 달리 Build 과정에서 마크업이 생성된다.</li>\n<li>즉, SEO에 최적화 되어 있다.</li>\n<li>필요에 따라 CSR과 SSR, lazy loading을 적절히 섞어 사용하여 단순한 static 페이지보다 좋다</li>\n</ul>\n<br>\n<p><strong>Markdown</strong></p>\n<ul>\n<li>콘텐츠를 Markdown 파일로 관리하여 편하다.</li>\n<li>JAMstack를 통해 MD파일을 스타일을 씌워준다.</li>\n<li>HTML 템플릿에 MD를 담는다.</li>\n</ul>\n<br>\n<br>\n<h3>🗡</h3>\n<p>빠른 사이트 구축을 위해 많은 <a href=\"https://www.gatsbyjs.com/starters?\">오픈소스 탬플릿</a>을 참고할 수 있다.</p>\n<p>난 <a href=\"https://www.gatsbyjs.com/starters/niklasmtj/gatsby-starter-julia\">gatsby-starter-julia</a> 이 디자인이 눈에 쏙 들어왔다. @emtion으로 스타일링이 되어 있다고 하니 커스텀하기도 나에게 딱이었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shell line-numbers\"><code class=\"language-shell\"><span class=\"token function\">yarn</span> global <span class=\"token function\">add</span> gatsby-cli</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shell line-numbers\"><code class=\"language-shell\">npx gatsby new blog https://github.com/niklasmtj/gatsby-starter-julia</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<ul>\n<li>Window에서는 앞에 <code class=\"language-text\">npx</code>은 빼도록 하자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">cd blog\ngatsby develop</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p><code class=\"language-text\">http://localhost:8000/</code>로 서버가 구동된다!</p>\n<br>\n<br>\n<h3>🗡</h3>\n<p>커스터마이징을 시작해보자.</p>\n<ol>\n<li><code class=\"language-text\">gatsby-config.js</code>  작성자의 정보사항을 수정해주자.</li>\n<li><code class=\"language-text\">./images/gatsby-icon.png</code>  웹 아이콘을 대체해주자.</li>\n<li><code class=\"language-text\">./src/content</code>에서 markdown파일을 작성하면 즉시 글이 생긴다.</li>\n<li>\n<p>레이아웃이 아쉬운 부분을 조금 수정하자!</p>\n<ul>\n<li><code class=\"language-text\">./src/pages/blog</code>에서 글 리스트를 수정할 수 있다.</li>\n<li><code class=\"language-text\">./src/components/layout</code>  Header, Footer를 수정할 수 있다.</li>\n<li><code class=\"language-text\">./src/components/landing-bio</code>  프로필 화면을 수정할 수 있다.</li>\n<li><code class=\"language-text\">./src/components/layout.css</code>  전체 기본 스타일을 수정할 수 있다.</li>\n</ul>\n<br>\n<ul>\n<li>나중에 변경사항 궁금하면 commit을 확인하도록 하자.</li>\n<li>드래그 설정한 부분</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-css line-numbers\"><code class=\"language-css\"><span class=\"token selector\">br</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">-moz-user-select</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">-khtml-user-select</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">-webkit-user-select</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">-ms-user-select</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">user-select</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">h1::selection,\nh2::selection,\nh3::selection,\nh4::selection,\nh5::selection,\nh6::selection,\np::selection,\nstrong::selection,\nspan::selection,\na::selection</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #dee9ff<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">li::selection</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #dee9ff90<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">code::selection,\ncode > span::selection</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #dee9ff30<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n</li>\n</ol>\n<br>\n<br>\n<h3>🗡 배포하기</h3>\n<p><code class=\"language-text\">gh-pages</code>를 통해서 Git Page로 배포할 예정이다.</p>\n<p>먼저 github repository를 파도록 하자.<br>\n레포지토리 이름은 <code class=\"language-text\">${github id}.github.io</code> 파도록 하자! 편하게 자동화를 위해!</p>\n<p>default branch는 <code class=\"language-text\">dev</code>로 파도록 하자.<br>\n이제 빌드를 하면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shell line-numbers\"><code class=\"language-shell\"><span class=\"token function\">git</span> branch -M gh-pages\n<span class=\"token function\">git</span> checkout gh-pages\n<span class=\"token function\">npm</span> i --save-dev gh-pages</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p><code class=\"language-text\">gh-pages</code> 브랜치를 파고 모듈 설치하자</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">\"scripts\": {\n    \"deploy\": \"gatsby build &amp;&amp; gh-pages -d public\",\n}</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p><code class=\"language-text\">package.json</code>에 스크립트를 추가하자</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">git push -u origin gh-pages</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>변경사항을 커밋하자</p>\n<br>\n<p>github에서 브랜치가 생겼는지 꼭 확인하고 다음 작업을 진행하자.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">npm run deploy</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p><code class=\"language-text\">Repository -> Settings -> Pages</code>가서 Source가 gh-pages 브랜치로 save되어 있는지 확인한다.</p>\n<p>시간이 조금 지나면 배포되었음을 알 수 있다!</p>\n<p><a href=\"https://bepyan.github.io\">bepyan.github.io</a></p>\n<br>\n<br>\n<h3>🗡 Github Actions으로 자동배포</h3>\n<p>dev 브랜치에 푸시를 하면 자동으로 배포되는 것이 목표이다.</p>\n<p>우선 <a href=\"https://github.com/settings/tokens\">github 토큰</a>을 구하로 가자.</p>\n<ul>\n<li>기존 만든 것이 있다면 <code class=\"language-text\">Regenerate token</code>하면 된다.</li>\n</ul>\n<p><code class=\"language-text\">Settings -> Secret -> Secrets -> New repository secret</code> 가서 Token을 등록하도록 하자.</p>\n<ul>\n<li>Github에서 <code class=\"language-text\">Env</code>로 사용된다고 생각하면 된다.</li>\n<li>나같은 경우 Key는 <code class=\"language-text\">TOKEN</code>, Value에 토큰을 복사했다.</li>\n</ul>\n<br>\n<p><code class=\"language-text\">Actions -> set up a workflow yourself</code> 가서 <code class=\"language-text\">main.yml</code> 파일을 만들자.</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-yml line-numbers\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Deploy Project\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> dev\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">update</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@master\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Set up Node.js\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>node@master\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">node-version</span><span class=\"token punctuation\">:</span> 12.x\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Cache node_modules\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/cache@v1\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> node_modules\n          <span class=\"token key atrule\">key</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>runner.OS<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">-</span>build<span class=\"token punctuation\">-</span>$<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>hashFiles('<span class=\"token important\">**/yarn.lock')</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n          <span class=\"token key atrule\">restore-keys</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n            ${{ runner.OS }}-build-${{ runner.OS }}-</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Install dependencies\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> yarn install <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>prod <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>pure<span class=\"token punctuation\">-</span>lockfile\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Build\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> yarn run build\n        <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">NODE_ENV</span><span class=\"token punctuation\">:</span> production\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Deploy\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> peaceiris/actions<span class=\"token punctuation\">-</span>gh<span class=\"token punctuation\">-</span>pages@v2.5.0\n        <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">PERSONAL_TOKEN</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>secrets.TOKEN<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n          <span class=\"token key atrule\">PUBLISH_BRANCH</span><span class=\"token punctuation\">:</span> gh<span class=\"token punctuation\">-</span>pages\n          <span class=\"token key atrule\">PUBLISH_DIR</span><span class=\"token punctuation\">:</span> ./public\n          <span class=\"token key atrule\">SCRIPT_MODE</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<ul>\n<li>\n<p><code class=\"language-text\">on: push: branches: dev</code></p>\n<ul>\n<li>해당 브랜치에 push가 들어오면 action을 실행하겠다.</li>\n</ul>\n</li>\n</ul>\n<br>\n<ul>\n<li>\n<p>github의 서버(우분투)에서 action이 실행되는데</p>\n<ul>\n<li>NodeJS를 설정하고</li>\n<li>node_modules를 설치하고</li>\n<li>build하고</li>\n<li>gh-pages 브랜치에 deploy한다. 이때 <code class=\"language-text\">gh-pages</code>가 배포할 때 사용자의 토큰이 필요하다.</li>\n</ul>\n</li>\n</ul>\n<br>\n<p>이제 완성했다. 이제 내용을 작성하고 <code class=\"language-text\">dev</code> 브랜치에 커밋을 하로 가자!</p>","excerpt":"Gatsby.   React를 알면 쉽게 사용할 수 있는 정적사이트 생성기. 🗡 특징 React + GrapQL기반 Jekyll은 Ruby 기반이기에 React에 친숙하면 Gatsby에 눈길이 갈거다. 정적 사이트 빈 HTML 페이지 안에 마크업을 추가해주는 SPA와 달리 Build…","frontmatter":{"date":"07 October, 2021","path":"/blog/gatsby-1","title":"Gatsby 블로그를 시작하기"},"fields":{"readingTime":{"text":"6 min read"}}}},"pageContext":{}},"staticQueryHashes":["3649515864","63159454"]}