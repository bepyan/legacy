{"version":3,"file":"component---src-templates-blog-post-js-3aa223a2bcf0a09b80a5.js","mappings":"yXAsCA,EAlCqB,WACnB,OAAgDA,EAAAA,EAAAA,YAAzCC,EAAP,KAAyBC,EAAzB,KAEMC,EAAS,SAACC,GACd,GAAKA,EACL,MAAO,IAAMA,EAAEC,MAAM,KAAKC,OA0B5B,OAvBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,WACnB,IAAIC,EACEC,EAAiBC,OAAOC,YACxBC,EAAiBC,SAASC,iBAAiB,kBACjDF,EAAeG,SAAQ,SAACC,EAAMC,GAC5B,IAAQC,EAAQF,EAAKG,wBAAbD,IACJT,EAAiBA,EAAiBS,EAjBtB,IAkBdjB,EAAoBC,EAAOM,IAIdS,IAAML,EAAeQ,OAAS,EACjCnB,EAAoBC,EAAOc,EAAKK,OACvCb,EAAiBQ,EAAKK,SAI/B,OADAX,OAAOY,iBAAiB,SAAUf,GAC3B,WACLG,OAAOa,oBAAoB,SAAUhB,MAEtC,IAEI,CAAEP,iBAAAA,I,8CCxBX,IAuCA,EAvCiB,SAAC,GAAc,IAC9B,EAD6B,EAAXwB,KACqCC,eAA/CC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,gBAAoBC,ECZ5B,SAAuCC,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKd,EAFLe,EAAS,GACTC,EAAaC,OAAOC,KAAKN,GAG7B,IAAKZ,EAAI,EAAGA,EAAIgB,EAAWb,OAAQH,IACjCc,EAAME,EAAWhB,GACba,EAASM,QAAQL,IAAQ,IAC7BC,EAAOD,GAAOF,EAAOE,IAGvB,OAAOC,EDAP,MACQhC,EAAqBqC,IAArBrC,iBAER,OACE,QAAC,KAAD,MACE,QAAC,KAAD,CACEsC,MAAOZ,EAAYY,MACnBC,YAAab,EAAYa,aAAeX,EAAKY,WAE/C,QAACC,EAAD,MACE,QAACC,EAAD,KAAehB,EAAYY,QAC3B,QAACK,EAAD,KACMjB,EAAYkB,KADlB,MAEGlB,EAAYmB,KAAKC,KAAI,SAACC,GAAD,OACpB,QAAC,EAAAC,KAAD,CAAMjB,IAAKgB,EAAGE,GAAE,SAAWF,EAAEG,eAA7B,IACOH,EADP,QAHJ,MAOSnB,EAAKuB,OAAOC,YAAYC,MAGhC3B,EAAY4B,SACX,QAAC,KAAD,CACEA,OAAQ5B,EAAY4B,OACpBC,YAAa7B,EAAY8B,QAI7B,QAACC,EAAD,CAAiBC,wBAAyB,CAAEC,OAAQ/B,EAAKgC,SAEzD,QAAC,KAAD,CACEC,MAAOlC,EACP3B,iBAAkBA,OA8BtByC,GAAO,qHAMPC,GAAY,4FAKZC,GAAU,4JAYVc,GAAe","sources":["webpack://edword-kim-blog/./src/hooks/useTocScroll.js","webpack://edword-kim-blog/./src/templates/BlogPost.js","webpack://edword-kim-blog/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst HEADER_OFFSET_Y = 100;\n\nconst useTocScroll = () => {\n  const [currentHeaderUrl, setCurrentHeaderUrl] = useState();\n\n  const getUrl = (s) => {\n    if (!s) return undefined;\n    return \"#\" + s.split(\"#\").pop();\n  };\n\n  useEffect(() => {\n    const handleScroll = () => {\n      let aboveHeaderUrl;\n      const currentOffsetY = window.pageYOffset;\n      const headerElements = document.querySelectorAll(\".anchor-header\");\n      headerElements.forEach((elem, i) => {\n        const { top } = elem.getBoundingClientRect();\n        if (currentOffsetY < currentOffsetY + top - HEADER_OFFSET_Y) {\n          setCurrentHeaderUrl(getUrl(aboveHeaderUrl));\n          return;\n        }\n\n        const isLast = i === headerElements.length - 1;\n        if (isLast) setCurrentHeaderUrl(getUrl(elem.href));\n        else aboveHeaderUrl = elem.href;\n      });\n    };\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, []);\n\n  return { currentHeaderUrl };\n};\n\nexport default useTocScroll;\n","import React from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport styled from \"@emotion/styled\";\nimport {\n  Layout,\n  SearchEngine,\n  SeriesCard,\n  TableOfContents,\n} from \"../components\";\nimport { useTocScroll } from \"../hooks\";\n\nconst BlogPost = ({ data }) => {\n  const { frontmatter, tableOfContents, ...post } = data.markdownRemark;\n  const { currentHeaderUrl } = useTocScroll();\n\n  return (\n    <Layout>\n      <SearchEngine\n        title={frontmatter.title}\n        description={frontmatter.description || post.excerpt}\n      />\n      <Content>\n        <MarkedHeader>{frontmatter.title}</MarkedHeader>\n        <HeaderDate>\n          {`${frontmatter.date} · `}\n          {frontmatter.tags.map((v) => (\n            <Link key={v} to={`/tags/${v.toLowerCase()}`}>\n              {` ${v} `}\n            </Link>\n          ))}\n          {` · ${post.fields.readingTime.text}`}\n        </HeaderDate>\n\n        {frontmatter.series && (\n          <SeriesCard\n            series={frontmatter.series}\n            currentPath={frontmatter.path}\n          />\n        )}\n\n        <MarkdownContent dangerouslySetInnerHTML={{ __html: post.html }} />\n\n        <TableOfContents\n          items={tableOfContents}\n          currentHeaderUrl={currentHeaderUrl}\n        />\n      </Content>\n    </Layout>\n  );\n};\nexport default BlogPost;\n\nexport const query = graphql`\n  query ($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      tableOfContents\n      excerpt(pruneLength: 160)\n      frontmatter {\n        date(formatString: \"YYYY.MM.DD\")\n        path\n        title\n        tags\n        series\n      }\n      fields {\n        readingTime {\n          text\n        }\n      }\n    }\n  }\n`;\n\nconst Content = styled.div`\n  margin: 0 auto;\n  max-width: 860px;\n  padding: 1.45rem 1.0875rem;\n`;\n\nconst MarkedHeader = styled.h1`\n  display: inline;\n  font-weight: 800;\n`;\n\nconst HeaderDate = styled.h3`\n  margin-top: 1rem;\n  font-size: 1rem;\n  font-weight: 400;\n  color: #606060;\n  & > a {\n    :hover {\n      text-decoration: none;\n    }\n  }\n`;\n\nconst MarkdownContent = styled.div`\n  a {\n    text-decoration: none;\n    position: relative;\n\n    color: grey;\n    background-image: linear-gradient(rgba(222, 233, 255), rgba(222, 233, 255));\n    background-repeat: no-repeat;\n    background-size: 100% 0.2em;\n    background-position: 0 88%;\n    transition: background-size 0.25s ease-in;\n    &:hover {\n      background-size: 100% 88%;\n    }\n  }\n\n  a > code:hover {\n    text-decoration: underline;\n  }\n\n  .anchor-header {\n    left: 4px;\n    background-image: none;\n  }\n`;\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"names":["useState","currentHeaderUrl","setCurrentHeaderUrl","getUrl","s","split","pop","useEffect","handleScroll","aboveHeaderUrl","currentOffsetY","window","pageYOffset","headerElements","document","querySelectorAll","forEach","elem","i","top","getBoundingClientRect","length","href","addEventListener","removeEventListener","data","markdownRemark","frontmatter","tableOfContents","post","source","excluded","key","target","sourceKeys","Object","keys","indexOf","useTocScroll","title","description","excerpt","Content","MarkedHeader","HeaderDate","date","tags","map","v","Link","to","toLowerCase","fields","readingTime","text","series","currentPath","path","MarkdownContent","dangerouslySetInnerHTML","__html","html","items"],"sourceRoot":""}