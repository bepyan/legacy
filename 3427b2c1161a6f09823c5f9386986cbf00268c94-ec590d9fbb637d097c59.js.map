{"version":3,"file":"3427b2c1161a6f09823c5f9386986cbf00268c94-ec590d9fbb637d097c59.js","mappings":"qLA4BA,IAvBmB,kBACjB,QAAC,EAAAA,YAAD,CACEC,MAAK,aAULC,OAAQ,SAACC,GAAD,OACN,QAACC,EAAD,MACE,QAACC,EAAD,MACE,QAACC,EAAD,KAAaH,EAAKI,KAAKC,aAAaC,QACpC,QAACC,EAAD,KAAcP,EAAKI,KAAKC,aAAaG,gBAS/C,IAAMN,GAAS,8EAITD,GAAc,mJAQdM,GAAW,yGAMXJ,GAAU,kGAKhBA,EAAWM,UAAY,CACrBC,UAAWC,IAAAA,OACXH,SAAUG,IAAAA,QAGZR,EAAWS,aAAe,CACxBF,UAAU,GACVF,SAAS,K,mNCxDX,IAkDA,EAlDmB,SAAC,GAAgB,IAAdK,EAAa,EAAbA,OACdC,GAAOC,EAAAA,EAAAA,gBAAe,aAkBzBC,kBAAkBC,MAAMC,QACvB,qBAAGC,KAAgBC,YAAYP,SAAWA,KAE3CQ,KAAI,qBAAGF,KAAgBC,eAE1B,GAA4BE,EAAAA,EAAAA,WAAS,GAA9BC,EAAP,KAAeC,EAAf,KAMA,OACE,QAACC,EAAD,MACE,cAAIC,QANS,WACfF,GAAWD,KAKT,WAAgCV,IAC9BU,IACA,mBACGT,EAAKO,KAAI,WAAkBM,GAAlB,IAAGC,EAAH,EAAGA,KAAMtB,EAAT,EAASA,MAAT,OACR,mBACE,QAAC,EAAAuB,KAAD,CAAMC,IAAKF,EAAMG,GAAIH,GAClBD,EAAI,EADP,KACYrB,QAKhB,QAAC,EAAAuB,KAAD,wBASJJ,GAAI,uaCpDV,IAmBA,EAnBwB,SAAC,GAAiC,IAA/BO,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,iBAChC,OAAKD,GAGH,QAACE,EAAD,MACE,eACEC,wBAAyB,CAAEC,OAAQJ,GACnCK,KAAKA,EAAAA,EAAAA,IAAF,gCAGUJ,EAHV,2BANU,0BAoBfC,GAAO","sources":["webpack://edword-kim-blog/./src/components/LandingBio.js","webpack://edword-kim-blog/./src/components/SeriesCard.js","webpack://edword-kim-blog/./src/components/TableOfContents.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport styled from \"@emotion/styled\";\n\nconst LandingBio = () => (\n  <StaticQuery\n    query={graphql`\n      query LandingSiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n            subtitle\n          }\n        }\n      }\n    `}\n    render={(data) => (\n      <OuterContainer>\n        <Container>\n          <NameHeader>{data.site.siteMetadata.title}</NameHeader>\n          <Description>{data.site.siteMetadata.subtitle}</Description>\n        </Container>\n      </OuterContainer>\n    )}\n  />\n);\n\nexport default LandingBio;\n\nconst Container = styled.div`\n  text-align: center;\n`;\n\nconst OuterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n  height: 78vh;\n`;\n\nconst Description = styled.p`\n  padding: 0;\n  margin-bottom: 1rem;\n  font-size: 1.4rem;\n`;\n\nconst NameHeader = styled.h1`\n  font-size: 3.5rem;\n  margin-bottom: 0.5rem;\n`;\n\nNameHeader.propTypes = {\n  siteTitle: PropTypes.string,\n  subtitle: PropTypes.string,\n};\n\nNameHeader.defaultProps = {\n  siteTitle: ``,\n  subtitle: ``,\n};\n","import React, { useState } from \"react\";\nimport { Link, graphql, useStaticQuery } from \"gatsby\";\nimport styled from \"@emotion/styled\";\n\nconst SeriesCard = ({ series }) => {\n  const list = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(\n        sort: { fields: [frontmatter___date], order: ASC }\n        filter: { frontmatter: { draft: { eq: false } } }\n      ) {\n        edges {\n          node {\n            frontmatter {\n              title\n              path\n              series\n            }\n          }\n        }\n      }\n    }\n  `)\n    .allMarkdownRemark.edges.filter(\n      ({ node }) => node.frontmatter.series === series\n    )\n    .map(({ node }) => node.frontmatter);\n\n  const [isFold, setIsFold] = useState(false);\n\n  const onToggle = () => {\n    setIsFold(!isFold);\n  };\n\n  return (\n    <Card>\n      <h3 onClick={onToggle}>Series. {series}</h3>\n      {!isFold && (\n        <div>\n          {list.map(({ path, title }, i) => (\n            <li>\n              <Link key={path} to={path}>\n                {i + 1}. {title}\n              </Link>\n            </li>\n          ))}\n\n          <Link>다른 Series 보기</Link>\n        </div>\n      )}\n    </Card>\n  );\n};\n\nexport default SeriesCard;\n\nconst Card = styled.div`\n  border-radius: 8px;\n  overflow: hidden;\n  background-color: #f8f9fa;\n  margin-bottom: 2rem;\n\n  h3 {\n    cursor: pointer;\n    padding: 2rem;\n    margin-bottom: 0px;\n    transition: all 0.3s ease-in-out;\n    &:hover {\n      background-color: #f4f4f4;\n    }\n  }\n\n  div {\n    padding: 0.5rem 2rem 2rem 2rem;\n    position: relative;\n    transition: all 0.3s ease-in-out;\n  }\n\n  li {\n    list-style: none;\n  }\n\n  a {\n    text-decoration: none;\n    color: #6f6f6f;\n    &:hover {\n      color: #4c4c4c;\n    }\n  }\n`;\n","import { css } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\nimport React from \"react\";\n\nconst TableOfContents = ({ items, currentHeaderUrl }) => {\n  if (!items) return <></>;\n\n  return (\n    <Wrapper>\n      <div\n        dangerouslySetInnerHTML={{ __html: items }}\n        css={css`\n          li.active > a,\n          a:hover,\n          a[href*=\"${currentHeaderUrl}\"] {\n            color: black;\n          }\n        `}\n      />\n    </Wrapper>\n  );\n};\n\nexport default TableOfContents;\n\nconst Wrapper = styled.div`\n  position: fixed;\n  position: -webkit-sticky;\n  top: 250px;\n  right: calc(((100% - 960px) / 2) - 220px);\n  max-width: 220px;\n  max-height: 90%;\n  overflow: hidden;\n\n  h5 {\n    text-indent: 10px;\n    margin-bottom: 8px;\n  }\n\n  p,\n  ul,\n  li {\n    list-style: none;\n    margin-top: 0;\n    margin-bottom: 0;\n    line-height: 30px;\n    text-indent: 10px;\n    font-size: 13px;\n  }\n  a {\n    text-decoration: none;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    color: grey;\n  }\n`;\n"],"names":["StaticQuery","query","render","data","OuterContainer","Container","NameHeader","site","siteMetadata","title","Description","subtitle","propTypes","siteTitle","PropTypes","defaultProps","series","list","useStaticQuery","allMarkdownRemark","edges","filter","node","frontmatter","map","useState","isFold","setIsFold","Card","onClick","i","path","Link","key","to","items","currentHeaderUrl","Wrapper","dangerouslySetInnerHTML","__html","css"],"sourceRoot":""}